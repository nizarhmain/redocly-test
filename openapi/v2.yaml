openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/authentication/invitations/accept":
    put:
      summary: Performs invitation acceptance
      tags:
      - Invitation
      parameters: []
      responses:
        '200':
          description: Ok
          examples:
            Ok: ''
        '422':
          description: unprocessable_entity
          examples:
            When token is invalid:
              errors:
              - title: Validation error
                details:
                - is invalid
                source:
                  pointer: token
            When token expired:
              errors:
              - title: Validation error
                details:
                - is invalid
                source:
                  pointer: token
            When password is invalid:
              errors:
              - title: Validation error
                details:
                - doesn't match Password
                source:
                  pointer: password_confirmation
              - title: Validation error
                details:
                - should have more than 8 characters including 1 uppercase letter,
                  1 number, 1 special character
                source:
                  pointer: password
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - is invalid
                      source:
                        pointer: token
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: Pj8W44CCsuL9yYsZfuF_
                password:
                  type: string
                  example: "&!PeH6mHq2"
                password_confirmation:
                  type: string
                  example: "&!PeH6mHq2"
              required:
              - token
              - password
              - password_confirmation
        required: true
  "/api/v1/authentication/invitations/validate":
    get:
      summary: Performs token validation
      tags:
      - Invitation
      parameters:
      - name: token
        in: query
        example: 5ytKLmdXGWigqRUfGbbL
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok: ''
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Validation error
                details:
                - is invalid
                source:
                  pointer: token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - is invalid
                      source:
                        pointer: token
                required:
                - errors
        '403':
          description: Forbidden
          examples:
            Forbidden:
              errors:
              - title: Validation error
                details:
                - is expired
                source:
                  pointer: token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - is expired
                      source:
                        pointer: token
                required:
                - errors
  "/api/v1/authentication/mfa/register":
    post:
      summary: Register user in Authy
      tags:
      - MFA Users
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: Created
          examples:
            Created:
              message: MFA has been enabled
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: MFA has been enabled
                required:
                - message
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When jwt token has wrong scopes:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cellphone:
                  type: string
                  example: '0330303'
                country_code:
                  type: string
                  example: '380'
              required:
              - cellphone
              - country_code
        required: true
  "/api/v1/authentication/mfa_tokens":
    post:
      summary: Performs a MFA token create request
      tags:
      - MFA Tokens
      security:
      - bearer_auth: []
      responses:
        '201':
          description: Created
          examples:
            Created:
              uuid: 99a05d70-72e8-013a-4c7e-0abdbfac18e5
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    example: 99a05d70-72e8-013a-4c7e-0abdbfac18e5
                required:
                - uuid
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When jwt token has wrong scopes:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            When user without authy:
              errors:
              - title: user id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: user id is invalid
                required:
                - errors
  "/api/v1/authentication/mfa_tokens/status":
    get:
      summary: Performs a MFA token get status
      tags:
      - MFA Tokens
      security:
      - bearer_auth: []
      parameters:
      - name: approval_request_id
        in: query
        example: 99a05d70-72e8-013a-4c7e-0abdbfac18e5
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          examples:
            Ok:
              status: approved
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: approved
                required:
                - status
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            When invalid approval request:
              errors:
              - title: 'Approval request not found: 11111'
            When approval request id is missing:
              errors:
              - title: Requested URL was not found. Please check http://docs.authy.com/
                  to see the valid URLs
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: 'Approval request not found: 11111'
                required:
                - errors
  "/api/v1/authentication/mfa_tokens/verify":
    post:
      summary: Performs a MFA token verification
      tags:
      - MFA Tokens
      security:
      - bearer_auth: []
      parameters:
      - name: mfa_token
        in: query
        example: '1239840'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          examples:
            When mfa token and authorization are correct:
              message: Token is valid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token is valid.
                required:
                - message
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            When incorrect mfa token:
              errors:
              - title: Token is invalid
            When user without authy:
              errors:
              - title: User id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Token is invalid
                required:
                - errors
  "/api/v1/authentication/mfa_tokens/request_sms":
    post:
      summary: Request an SMS with MFA token for verification
      tags:
      - MFA Tokens
      security:
      - bearer_auth: []
      responses:
        '200':
          description: OK
          examples:
            Authorization are correct:
              message: SMS token was sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: SMS token was sent
                required:
                - message
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            When user without authy:
              errors:
              - title: User id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Token is invalid
                required:
                - errors
  "/api/v1/authentication/passwords/forgot":
    post:
      summary: Performs forgot password request
      tags:
      - Password reset
      parameters: []
      responses:
        '201':
          description: Created
          examples:
            Created: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: camilo@zuniga.com
              required:
              - email
        required: true
  "/api/v1/authentication/passwords/validate_reset_token":
    get:
      summary: Performs token validation
      tags:
      - Password reset
      parameters:
      - name: token
        in: query
        example: 5ytKLmdXGWigqRUfGbbL
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok: ''
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Validation error
                details:
                - is invalid
                source:
                  pointer: reset_password_token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - is invalid
                      source:
                        pointer: reset_password_token
                required:
                - errors
        '403':
          description: Forbidden
          examples:
            Forbidden:
              errors:
              - title: Validation error
                details:
                - is expired
                source:
                  pointer: reset_password_token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - is expired
                      source:
                        pointer: reset_password_token
                required:
                - errors
  "/api/v1/authentication/passwords/reset":
    put:
      summary: Performs password reset
      tags:
      - Password reset
      parameters: []
      responses:
        '200':
          description: Ok
          examples:
            Ok: ''
        '422':
          description: unprocessable_entity
          examples:
            When token is invalid:
              errors:
              - title: Validation error
                details:
                - is invalid
                source:
                  pointer: reset_password_token
            When token expired:
              errors:
              - title: Validation error
                details:
                - has expired, please request a new one
                source:
                  pointer: reset_password_token
            When password is invalid:
              errors:
              - title: Validation error
                details:
                - doesn't match Password
                source:
                  pointer: password_confirmation
              - title: Validation error
                details:
                - should have more than 8 characters including 1 uppercase letter,
                  1 number, 1 special character
                source:
                  pointer: password
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - is invalid
                      source:
                        pointer: reset_password_token
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: Pj8W44CCsuL9yYsZfuF_
                password:
                  type: string
                  example: "&!PeH6mHq2"
                password_confirmation:
                  type: string
                  example: "&!PeH6mHq2"
              required:
              - token
              - password
              - password_confirmation
        required: true
  "/api/v1/authentication/token":
    post:
      summary: Performs a token create request
      tags:
      - Token Create
      parameters: []
      responses:
        '201':
          description: Created
          examples:
            When valid params:
              access_token: E0V1Oy8DHXIV2HDXasD-wt8jg
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: E0V1Oy8DHXIV2HDXasD-wt8jg
                required:
                - access_token
        '400':
          description: Bad Request
          examples:
            When can not find user with for required email:
              errors:
              - title: invalid_grant
                details:
                - The provided authorization grant is invalid, expired, revoked, does
                  not match the redirection URI used in the authorization request,
                  or was issued to another client.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: invalid_grant
                      details:
                      - The provided authorization grant is invalid, expired, revoked,
                        does not match the redirection URI used in the authorization
                        request, or was issued to another client.
                required:
                - errors
        '401':
          description: Unauthorized
          examples:
            When unauthorized request:
              errors:
              - title: invalid_client
                details:
                - Client authentication failed due to unknown client, no client authentication
                  included, or unsupported authentication method.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: invalid_client
                      details:
                      - Client authentication failed due to unknown client, no client
                        authentication included, or unsupported authentication method.
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: camilo@zuniga.com
                password:
                  type: string
                  example: Test1234*
              required:
              - email
              - password
        required: true
  "/api/v1/collection/organisations/{organisation_id}/funding_instructions/{virtual_account_number}":
    get:
      summary: Get funding instructions for virtual account
      tags:
      - Funding Instructions
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        required: true
        example: '8'
        description: Organisation identifier
        schema:
          type: string
      - name: virtual_account_number
        in: path
        required: true
        example: '12345678910'
        description: Virtual account number
        schema:
          type: string
      responses:
        '200':
          description: success
          examples:
            Success:
              data:
                beneficiary:
                  account_number: '12345678910'
                  bank_address: Kongens Nytorv 1, Copenhagen, Denmark
                  bank_name: AP BANK
                  full_name: Awesome Princess
                  iban: GB13BUKB60161331926819
                  sort_code: '202686'
                  swift_code: BARCGB22
                changed: false
                currency_iso: EUR
                funding_reference: anything
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      funding_reference: anything
                      currency_iso: EUR
                      changed: false
                      beneficiary:
                        full_name: Awesome Princess
                        bank_name: AP BANK
                        bank_address: Kongens Nytorv 1, Copenhagen, Denmark
                        iban: GB13BUKB60161331926819
                        account_number: '12345678910'
                        sort_code: '202686'
                        swift_code: BARCGB22
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Not Found
          examples:
            Not found:
              errors:
              - title:
                  code: 2001
                  title: Resource not found
                  details: Funding configuration not found
                details:
                -
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      -
                      title:
                        code: 2001
                        title: Resource not found
                        details: Funding configuration not found
                required:
                - errors
  "/api/v1/collection/organisations/{organisation_id}/funding_instructions/{virtual_account_number}/accept_changes":
    put:
      summary: Put accept changes for funding instructions
      tags:
      - Accept Funding Instructions
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        required: true
        example: '8'
        description: Organisation identifier
        schema:
          type: string
      - name: virtual_account_number
        in: path
        required: true
        example: '12345678910'
        description: Virtual account number
        schema:
          type: string
      responses:
        '200':
          description: success
          examples:
            Success:
              data:
                banking_rail_id: 2
                email: awesome.princess@inpay.com
                funding_reference: labas
                inpay_bank_account_id: 32
                organisation_id: 9
                uuid: 45716c65-3fe6-4d4f-8333-5feea896b06b
                virtual_account_number: '12378965438'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example:
                      uuid: 45716c65-3fe6-4d4f-8333-5feea896b06b
                      email: awesome.princess@inpay.com
                      funding_reference: labas
                      virtual_account_number: '12378965438'
                      banking_rail_id: 2
                      inpay_bank_account_id: 32
                      organisation_id: 9
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity - bad uuid
          examples:
            Unprocessable entity bad uuid:
              errors:
              - title:
                  code: 2002
                  title: Validation Error
                  details:
                    uuid:
                    - must be filled
                details:
                -
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      -
                      title:
                        code: 2002
                        title: Validation Error
                        details:
                          uuid:
                          - must be filled
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                configuration_uuid:
                  type: string
                  example: 45716c65-3fe6-4d4f-8333-5feea896b06b
              required:
              - configuration_uuid
        required: true
  "/api/v1/collection/orders":
    get:
      summary: Retrieves orders list
      tags:
      - Orders
      security:
      - bearer_auth: []
      parameters:
      - name: created_after
        in: query
        example: '2021-01-01'
        required: true
        schema:
          type: string
      - name: created_before
        in: query
        example: '2023-01-01'
        required: true
        schema:
          type: string
      - name: status
        in: query
        example: pending
        required: false
        schema:
          type: string
      - name: virtual_account_number
        in: query
        example: '63262202402'
        required: false
        schema:
          type: string
      - name: meta[page_size]
        in: query
        example: 2
        required: false
        schema:
          type: integer
      - name: meta[sort]
        in: query
        example: "-amount"
        required: false
        schema:
          type: string
      - name: meta[cursor_before]
        in: query
        required: false
        schema:
          type: string
      - name: meta[cursor_after]
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          examples:
            Success:
              data:
              - uuid: f6a7081f-7c1a-4fc2-aeec-6722769e1fb6
                reference: '1739'
                debtor:
                  email: john@doe.com
                  full_name: John Doe
                  date_of_birth: '1950-02-01'
                  country_of_residence: ES
                  created_at: '2021-09-24T14:04:26Z'
                amount: '100.0'
                amount_cents: 10000
                currency: EUR
                created_at: '2021-11-08T10:58:25Z'
                status: pending
                virtual_account_number: '63262202402'
              meta:
                cursor_before:
                cursor_after: f6a7081f-7c1a-4fc2-aeec-6722769e1fb6
                total: 6
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - amount: '100.0'
                      amount_cents: 10000
                      created_at: '2021-11-08T10:58:25Z'
                      currency: EUR
                      debtor:
                        country_of_residence: ES
                        created_at: '2021-09-24T14:04:26Z'
                        date_of_birth: '1950-02-01'
                        email: john@doe.com
                        full_name: John Doe
                      reference: '1739'
                      status: cancelled
                      virtual_account_number: '63262202402'
                      uuid: f6a7081f-7c1a-4fc2-aeec-6722769e1fb6
                  meta:
                    type: object
                    example:
                      cursor_after: f6a7081f-7c1a-4fc2-aeec-6722769e1fb6
                      cursor_before:
                      total: 6
                  required:
                  - data
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
        '400':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation error
                detail:
                  meta:
                    sort:
                    - 'must be one of: status, -status, amount, -amount, date, -date'
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      detail:
                        meta:
                          sort:
                          - 'must be one of: status, -status, amount, -amount, date,
                            -date'
                      status: bad_request
                required:
                - errors
  "/api/v1/collection/orders/{uuid}":
    get:
      summary: Find order by uuid
      tags:
      - Orders
      security:
      - bearer_auth: []
      parameters:
      - name: uuid
        in: path
        example: 5fd8b555-4ec7-461e-8b5d-b9ef8911ce79
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          examples:
            Success:
              data:
                uuid: f56c3ff4-971e-4493-ba97-24b417ec5ab6
                reference: 3zsX60iMh6
                debtor:
                  email: john@doe.com
                  full_name: John Doe
                  date_of_birth: '1950-02-01'
                  country_of_residence: ES
                  created_at: '2022-02-01T13:24:21Z'
                business_unit: default
                payments:
                - uuid: 53d38ab8-4ef7-46c8-be21-e986ad5828a8
                  status: extra_bank_info_required
                  type: instant_bank_transfer
                  inpay_unique_reference: 4L5X9YK
                  created_at: '2022-06-09T10:17:58Z'
                status_history:
                - status: received
                  created_at: '2022-06-09T10:17:58Z'
                - status: pending
                  created_at: '2022-06-09T10:17:58Z'
                - status: cancelled
                  created_at: '2022-07-27T03:00:28Z'
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Order Not Found
                detail: Unable to find order with given params
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Order Not Found
                      detail: Unable to find order with given params
                required:
                - errors
  "/api/v1/collection/orders/find_by_uuid_or_inpay_external_reference":
    get:
      summary: Find order details by uuid or inpay_external_reference
      tags:
      - Orders
      security:
      - bearer_auth: []
      parameters:
      - name: search_reference
        in: query
        example: f915912e-6c29-4fed-9533-9208244fc6c9
        required: true
        schema:
          type: string
      - name: created_after
        in: query
        example: '2021-01-01'
        required: true
        schema:
          type: string
      - name: created_before
        in: query
        example: '2023-01-01'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          examples:
            Success:
              data:
                uuid: f56c3ff4-971e-4493-ba97-24b417ec5ab6
                reference: 3zsX60iMh6
                debtor:
                  email: john@doe.com
                  full_name: John Doe
                  date_of_birth: '1950-02-01'
                  country_of_residence: ES
                  created_at: '2022-02-01T13:24:21Z'
                amount: '100.0'
                amount_cents: 10000
                currency: EUR
                created_at: '2022-06-09T10:17:58Z'
                status: cancelled
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Order Not Found
                detail: Unable to find order with given params
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Order Not Found
                      detail: Unable to find order with given params
                required:
                - errors
  "/api/v1/collection/payments/{uuid}":
    get:
      summary: Find payment by uuid
      tags:
      - Order payments
      security:
      - bearer_auth: []
      parameters:
      - name: uuid
        in: path
        example: 5fd8b555-4ec7-461e-8b5d-b9ef8911ce79
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  InstantBankTransferPayment:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          uuid:
                            type: string
                          status:
                            type: string
                          type:
                            type: string
                          inpay_unique_reference:
                            type: object
                          created_at:
                            type: string
                          order:
                            type: object
                  BankTransferPayment:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          uuid:
                            type: string
                          status:
                            type: string
                          type:
                            type: string
                          inpay_unique_reference:
                            type: object
                          created_at:
                            type: string
                          order:
                            type: object
              examples:
                InstantBankTransferPayment:
                  summary: Instant Bank Transfer Payment
                  value:
                    data:
                      uuid: f915912e-6c29-4fed-9533-9208244fc6c9
                      status: created
                      type: instant_bank_transfer
                      inpay_unique_reference: 4D99UEG
                      created_at: '2022-07-04T09:15:16+01:00'
                      order:
                        uuid: 5fd8b555-4ec7-461e-8b5d-b9ef8911ce79
                        reference: hzhP6h9HKs
                        debtor:
                          email: john@doe.com
                          full_name: John Doe
                          date_of_birth: '1950-02-01'
                          country_of_residence: ES
                          created_at: '2022-02-01T13:24:21+00:00'
                        amount: '100.0'
                        amount_cents: 10000
                        currency: EUR
                        created_at: '2022-07-04T09:15:16+01:00'
                        status: cancelled
                      details: {}
                      status_history:
                      - status: created
                        created_at: '2022-07-04T09:15:16+01:00'
                BankTransferPayment:
                  summary: Bank Transfer Payment
                  value:
                    data:
                      uuid: 9aa870c2-a720-438d-aa4a-4e89d1a070ce
                      status: created
                      type: bank_transfer
                      inpay_unique_reference: 46MCXTB
                      created_at: '2023-08-11T08:35:13Z'
                      order:
                        uuid: 3f01ce2d-151a-4b26-865d-d2021bf0f4c8
                        reference: 58XxZ5s1hb
                        debtor:
                          email: john@doe.com
                          full_name: John Doe
                          date_of_birth: '1950-02-01'
                          country_of_residence: ES
                          created_at: '2022-02-01T13:24:21Z'
                        amount: '100.0'
                        amount_cents: 10000
                        currency: EUR
                        created_at: '2022-02-01T13:24:21Z'
                        status: cancelled
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Payment Not Found
                detail: Unable to find payment with given params
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Payment Not Found
                      detail: Unable to find payment with given params
                required:
                - errors
  "/api/v1/collection/payments/find_by_uuid_or_inpay_unique_reference":
    get:
      summary: Find payment details by uuid or inpay_unique_reference
      tags:
      - Order payments
      security:
      - bearer_auth: []
      parameters:
      - name: search_reference
        in: query
        example: f915912e-6c29-4fed-9533-9208244fc6c9
        required: true
        schema:
          type: string
      - name: created_after
        in: query
        example: '2021-01-01'
        required: true
        schema:
          type: string
      - name: created_before
        in: query
        example: '2023-01-01'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  InstantBankTransferPayment:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          uuid:
                            type: string
                          status:
                            type: string
                          type:
                            type: string
                          inpay_unique_reference:
                            type: object
                          created_at:
                            type: string
                          order:
                            type: object
                  BankTransferPayment:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          uuid:
                            type: string
                          status:
                            type: string
                          type:
                            type: string
                          inpay_unique_reference:
                            type: object
                          created_at:
                            type: string
                          order:
                            type: object
              examples:
                InstantBankTransferPayment:
                  summary: Instant Bank Transfer Payment
                  value:
                    data:
                      uuid: f915912e-6c29-4fed-9533-9208244fc6c9
                      status: created
                      type: instant_bank_transfer
                      inpay_unique_reference: 4D99UEG
                      created_at: '2022-07-04T09:15:16+01:00'
                      order:
                        uuid: 5fd8b555-4ec7-461e-8b5d-b9ef8911ce79
                        reference: hzhP6h9HKs
                        debtor:
                          email: john@doe.com
                          full_name: John Doe
                          date_of_birth: '1950-02-01'
                          country_of_residence: ES
                          created_at: '2022-02-01T13:24:21+00:00'
                        amount: '100.0'
                        amount_cents: 10000
                        currency: EUR
                        created_at: '2022-07-04T09:15:16+01:00'
                        status: cancelled
                BankTransferPayment:
                  summary: Bank Transfer Payment
                  value:
                    data:
                      uuid: 9aa870c2-a720-438d-aa4a-4e89d1a070ce
                      status: created
                      type: bank_transfer
                      inpay_unique_reference: 46MCXTB
                      created_at: '2023-08-11T08:35:13Z'
                      order:
                        uuid: 3f01ce2d-151a-4b26-865d-d2021bf0f4c8
                        reference: 58XxZ5s1hb
                        debtor:
                          email: john@doe.com
                          full_name: John Doe
                          date_of_birth: '1950-02-01'
                          country_of_residence: ES
                          created_at: '2022-02-01T13:24:21Z'
                        amount: '100.0'
                        amount_cents: 10000
                        currency: EUR
                        created_at: '2022-02-01T13:24:21Z'
                        status: cancelled
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Payment Not Found
                detail: Unable to find payment with given params
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Payment Not Found
                      detail: Unable to find payment with given params
                required:
                - errors
  "/api/v1/collection/stats/orders/status_counts_reports":
    get:
      summary: Retrieves orders status counts report
      tags:
      - Collection stats
      security:
      - bearer_auth: []
      parameters:
      - name: created_after
        in: query
        example: '2021-01-01'
        required: true
        schema:
          type: string
      - name: created_before
        in: query
        example: '2023-01-01'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Success
          examples:
            Success:
              data:
              - code: received
                name: Received
                count: 4
              - code: pending
                name: Pending
                count: 5
              - code: cancelled
                name: Cancelled
                count: 2367
              - code: authorised
                name: Authorised
                count: 289
              - code: processing
                name: Processing
                count: 2
              - code: action_required
                name: Action required
                count: 19
              - code: completed
                name: Completed
                count: 20
              - code: processing_refund
                name: Processing refund
                count: 34
              - code: action_required_for_refund
                name: Action required for refund
                count: 7
              - code: refunded
                name: Refunded
                count: 9
              meta:
                orders_count: 2756
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - code: received
                      name: Received
                      count: 1
                    - code: pending
                      name: Pending
                      count: 0
                    - code: cancelled
                      name: Cancelled
                      count: 0
                    - code: authorised
                      name: Authorised
                      count: 0
                    - code: processing
                      name: Processing
                      count: 0
                    - code: action_required
                      name: Action required
                      count: 0
                    - code: completed
                      name: Completed
                      count: 0
                    - code: processing_refund
                      name: Processing refund
                      count: 0
                    - code: action_required_for_refund
                      name: Action required for refund
                      count: 0
                    - code: refunded
                      name: Refunded
                      count: 0
                  meta:
                    type: object
                    example:
                      orders_count: 1
                  required:
                  - data
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
        '400':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation error
                detail:
                  created_after:
                  - must be a date
                  created_before:
                  - must be a date
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      detail:
                        end_date:
                        - must be a date
                        start_date:
                        - must be a date
                      status: bad_request
                required:
                - errors
  "/api/v1/customer/business_units":
    get:
      summary: Performs get organisation business units
      tags:
      - Get organisations business units
      security:
      - bearer_auth: []
      responses:
        '200':
          description: success
          examples:
            Success:
              data:
              - uuid: 6632356f-87ba-4240-8901-34614202f2f6
                name: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - uuid: 6632356f-87ba-4240-8901-34614202f2f6
                      name: default
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
  "/api/v1/customer/organisations/{id}/configurations":
    get:
      summary: Performs request for getting settings for an organisation
      tags:
      - Configurations
      parameters:
      - name: Authorization
        in: header
        example: Bearer `JWT access token`
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        example: 1
        description: Organisation ID
        schema:
          type: number
      responses:
        '200':
          description: success
          examples:
            When there is approval configurations for organisation:
              data:
                batch_number_of_approvers: '3'
            When there is no configurations for organisation:
              data: {}
        '404':
          description: Invalid organisation
          examples:
            Invalid organisation:
              errors:
              - title: Not found
                details:
                - Organisation doesn't exist
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
  "/api/v1/customer/organisations/{organisation_id}/contracted_products":
    get:
      summary: Get contracted products count for organisation
      tags:
      - Contracted Products
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        example: '19'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          examples:
            Success:
              meta:
                collection_products_count: 0
                payout_products_count: 0
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: hash
                    example:
                      collection_products_count: 0
                      payout_products_count: 0
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Not found
                details:
                - Organisation doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not found
                      details:
                      - Organisation doesn't exist
                      source:
                        pointer: id
                required:
                - errors
  "/api/v1/customer/current_user":
    get:
      summary: Performs get current user request
      tags:
      - Get current user
      security:
      - bearer_auth: []
      responses:
        '200':
          description: success
          examples:
            Success:
              user:
                id: 2
                email: camilo@zuniga.com
                first_name: Camilo
                last_name: Zuniga
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: hash
                    example:
                      id: 2
                      email: camilo@zuniga.com
                      first_name: Camilo
                      last_name: Zuniga
                required:
                - user
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
  "/api/v1/customer/organisations":
    get:
      summary: Performs get organisations for the current user request
      tags:
      - Organisations
      security:
      - bearer_auth: []
      responses:
        '200':
          description: success
          examples:
            Success:
              organisations:
              - id: 1
                name: Inpay
                is_default: false
          content:
            application/json:
              schema:
                type: object
                properties:
                  organisations:
                    type: array
                    example:
                    - id: 1
                      name: Inpay
                      is_default: true
                required:
                - organisations
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
  "/api/v1/customer/organisations/{id}/set_default":
    post:
      summary: Performs request for setting the organisation as default for the current
        user
      tags:
      - Organisations
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        example: 1
        description: Organisation ID
        schema:
          type: number
      responses:
        '200':
          description: success
          examples:
            Success:
        '422':
          description: Wrong organisation
          examples:
            Wrong organisation:
              errors: []
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
  "/api/v1/customer/organisations/{id}/set_current":
    post:
      summary: Performs request for setting the organisation as default for the current
        user
      tags:
      - Organisations
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        example: 1
        description: Organisation ID
        schema:
          type: number
      responses:
        '200':
          description: success
          examples:
            Success:
        '422':
          description: Wrong organisation
          examples:
            Wrong organisation:
              errors:
              - title: Authentication configuration error.
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
  "/api/v1/customer/roles":
    get:
      summary: Performs get roles
      tags:
      - Get roles
      security:
      - bearer_auth: []
      responses:
        '200':
          description: success
          examples:
            Success:
              data:
              - name: member
                description: Member role
              - name: admin
                description: Admin role
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - name: admin
                      description: Admin role
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
  "/api/v1/customer/organisations/{organisation_id}/users":
    post:
      summary: Performs user update
      tags:
      - Organisation Users
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        example: '1'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          examples:
            Success:
              data:
                id: 9
                first_name: New First Name
                last_name: New Last Name
                email: new@email.com
                role: admin
                created_at: '2023-05-10T13:28:41.156+00:00'
                updated_at: '2023-05-10T13:28:41.156+00:00'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example:
                    - first_name: John
                      last_name: Doe
                      email: john@doe.com
                      role: admin
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
        '422':
          description: Unprocessable Entity - wrong role
          examples:
            Unprocessable entity wrong details:
              errors:
              - title: Validation Error
                details:
                - is in invalid format
                source:
                  pointer: email
              - title: Validation Error
                details:
                - must be filled
                source:
                  pointer: first_name
              - title: Validation Error
                details:
                - must be filled
                source:
                  pointer: last_name
              - title: Validation Error
                details:
                - is missing
                source:
                  pointer: role
            Unprocessable entity wrong role:
              errors:
              - title: Validation Error
                details:
                - doesn't exists
                source:
                  pointer: role
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      - doesn't exists
                      source:
                        pointer: role
                      title: Validation Error
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              data:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: john@doe.com
                role:
                  type: string
                  example: admin
        required: true
  "/api/v1/customer/organisations/{organisation_id}/users/{id}":
    patch:
      summary: Performs user update
      tags:
      - Organisation Users
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        example: '1'
        required: true
        schema:
          type: string
      - name: id
        in: path
        example: '1'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          examples:
            Success:
              data:
                id: 3
                first_name: Updated First Name
                last_name: Updated Last Name
                email: updated@email.com
                created_at: '2022-02-15T12:46:24.336Z'
                updated_at: '2023-04-13T10:39:57.205Z'
                role: admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example:
                    - first_name: John
                      last_name: Doe
                      email: john@doe.com
                      role: admin
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
        '422':
          description: Unprocessable Entity - wrong role
          examples:
            Unprocessable entity wrong details:
              errors:
              - title: Validation Error
                details:
                - must be filled
                source:
                  pointer: first_name
              - title: Validation Error
                details:
                - must be filled
                source:
                  pointer: last_name
              - title: Validation Error
                details:
                - is in invalid format
                source:
                  pointer: email
            Unprocessable entity wrong role:
              errors:
              - title: Validation Error
                details:
                - doesn't exists
                source:
                  pointer: role
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      - doesn't exists
                      source:
                        pointer: role
                      title: Validation Error
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              data:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: john@doe.com
                role:
                  type: string
                  example: admin
        required: true
    get:
      summary: Gets individual user details
      tags:
      - Organisation Users
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        example: '1'
        required: true
        schema:
          type: string
      - name: id
        in: path
        example: '1'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          examples:
            Success:
              data:
                id: 3
                first_name: Camilo
                last_name: Zuniga
                email: camilo@zuniga.com
                created_at: '2022-02-22T17:02:10.367Z'
                updated_at: '2023-04-04T09:30:06.756Z'
                role: operations member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      id: 2
                      email: camilo@zuniga.com
                      first_name: Camilo
                      last_name: Zuniga
                      role: operations member
                      created_at: '2022-02-15T12:46:24.336Z'
                      updated_at: '2023-04-13T10:39:57.205Z'
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not found
                      details:
                      - User not found
                      source:
                        pointer: id
                required:
                - errors
  "/api/v1/customer/organisations/{organisation_id}/users/":
    get:
      summary: Gets list of users
      tags:
      - Organisation Users
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        example: '1'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          examples:
            When there are no users:
              data:
              - id: 3
                first_name: Camilo
                last_name: Zuniga
                email: camilo@zuniga.com
                created_at: '2022-02-22T17:02:10.367Z'
                updated_at: '2023-04-04T09:30:06.756Z'
                role: operations member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: hash
                      example:
                      - id: 3
                        email: camilo@zuniga.com
                        first_name: Camilo
                        last_name: Zuniga
                        role: operations member
                        created_at: '2022-02-22T17:02:10.367Z'
                        updated_at: '2023-04-04T09:30:06.756Z'
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Not found
                details:
                - Organisation doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not found
                      details:
                      - Organisation doesn't exist
                      source:
                        pointer: id
                required:
                - errors
  "/api/v1/fx/organisations/{organisation_id}/exchange_rate":
    get:
      summary: Get FX exchange rate
      tags:
      - FX Rate
      parameters:
      - name: Authorization
        in: header
        example: Bearer `JWT access token`
        required: true
        schema:
          type: string
      - name: organisation_id
        in: path
        required: true
        example: '8'
        description: Organisation identifier
        schema:
          type: string
      - name: buy_currency
        in: query
        required: true
        example: EUR
        description: Buy Currency
        schema:
          type: string
      - name: pay_currency
        in: query
        required: true
        example: USD
        description: Pay Currency
        schema:
          type: string
      responses:
        '200':
          description: success
          examples:
            When there is a FX exchange rate and markup available:
              buy_currency: EUR
              pay_currency: USD
              exchange_rate: '1.1091453795'
              utc_time: '2023-12-22'
          content:
            application/json:
              schema:
                type: object
                properties:
                  buy_currency:
                    type: string
                    example: EUR
                  pay_currency:
                    type: string
                    example: USD
                  exchange_rate:
                    type: string
                    example: '1.1091453795'
                  utc_time:
                    type: string
                    example: '2023-12-22'
                required:
                - buy_currency
                - pay_currency
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - code: 15002
                title: Validation Error
                details: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - code: 15002
                      title: Validation Error
                      details: ''
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - code: 15001
                title: Not Found Error
                details: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - code: 15001
                      title: Not Found Error
                      details: ''
                required:
                - errors
  "/api/v1/payouts/organisations/{organisation_id}/batches":
    get:
      summary: Performs payout bathces index request
      tags:
      - Get payout batches index
      parameters:
      - name: Authorization
        in: header
        example: Bearer `JWT access token`
        required: true
        schema:
          type: string
      - name: organisation_id
        in: path
        example: 8
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        required: true
        schema:
          type: object
          properties:
            state:
              type: string
              example: waiting_review
            kind:
              type: string
              example: csv
          required:
          - kind
      - name: page
        in: query
        schema:
          type: object
          properties:
            page:
              type: object
              properties:
                size:
                  type: integer
                  example: 1
                  description: Number of records to be included per page in the paginated
                    result set. This value determines the page size for the response.
                include_cursor:
                  type: boolean
                  example: true
                  description: Flag indicating whether to include cursor information
                    in the response
                cursor_after:
                  type: string
                  example: '1'
                  description: Cursor indicating the starting point for fetching records
                    after the specified identifier
                cursor_before:
                  type: string
                  example: '1'
                  description: Cursor indicating the ending point for fetching records
                    before the specified identifier
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - id: 4
                kind: csv
                name: file
                status: processing
                local_instrument: SEPA
                total_payout_requests_count: 1
                total_amount: 410.0
                creator_id: 2
                currency:
                  iso: EUR
                  name: Euro
                country:
                  iso: AT
                  name: Austria
                approvers_count: 1
                accepted_payout_requests_count: 0
                created_at: '2021-02-12T13:00:00.000Z'
              - id: 3
                kind: csv
                name: file
                status: processing
                local_instrument: SEPA
                total_payout_requests_count: 1
                total_amount: 410.0
                creator_id: 2
                currency:
                  iso: EUR
                  name: Euro
                country:
                  iso: AT
                  name: Austria
                approvers_count: 1
                accepted_payout_requests_count: 0
                created_at: '2021-02-12T13:00:00.000Z'
              - id: 2
                kind: csv
                name: file
                status: processing
                local_instrument: SEPA
                total_payout_requests_count: 1
                total_amount: 410.0
                creator_id: 2
                currency:
                  iso: EUR
                  name: Euro
                country:
                  iso: AT
                  name: Austria
                approvers_count: 0
                accepted_payout_requests_count: 0
                created_at: '2023-03-12T13:00:00.000Z'
              - id: 1
                kind: csv
                name: file
                status: processing
                local_instrument: SEPA
                total_payout_requests_count: 1
                total_amount: 410.0
                creator_id: 2
                currency:
                  iso: EUR
                  name: Euro
                country:
                  iso: AT
                  name: Austria
                approvers_count: 0
                accepted_payout_requests_count: 0
                created_at: '2021-02-12T13:00:00.000Z'
              meta:
                cursor_next: 1
                cursor_prev: 4
                has_previous_page: false
                has_next_page: false
                total: 4
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - id: 1
                      kind: csv
                      name: file
                      status: waiting_review
                      local_instrument: INTERNATIONAL
                      total_payout_requests_count: 10
                      total_amount: 38.0
                      currency:
                        iso: DKK
                        name: Dkk
                      country:
                        iso: SE
                        name: Sweden
                      approvers_count: 1
                      accepted_payout_requests_count: 0
                      creator_id: 2
                      creator_name: Holly Golightly
                      created_at: 2021-02-12 13:00:00 UTC
                  meta:
                    type: hash
                    example:
                      cursor_next: '1'
                      cursor_prev: '4'
                      has_previous_page: false
                      has_next_page: false
                      total: 1
                required:
                - data
                - meta
        '404':
          description: Organisation Not Found
          examples:
            Organisation not found:
              errors:
              - title: Not found
                details:
                - Organisation doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not found
                      details:
                      - Payment request not found
                      source:
                        pointer: inpay_unique_reference
                required:
                - errors
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
  "/api/v1/payouts/organisations/{organisation_id}/batches/{id}":
    get:
      summary: Performs get batch details request
      tags:
      - Get batch details
      parameters:
      - name: Authorization
        in: header
        example: Bearer `JWT access token`
        required: true
        schema:
          type: string
      - name: organisation_id
        in: path
        required: true
        example: '8'
        description: Organisation id
        schema:
          type: string
      - name: id
        in: path
        required: true
        example: '3'
        description: Batch id
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                id: 3
                kind: csv
                name: file
                status: rejected
                local_instrument: SEPA
                total_payout_requests_count: 2
                total_amount: 24.0
                currency:
                  iso: EUR
                  name: Euro
                creator_id: 2
                country:
                  iso: BE
                  name: Belgium
                approvers_count: 1
                accepted_payout_requests_count: 0
                rejections:
                - user_id: 5
                  approved: false
                  user_name: Test user
                  created_at: '2021-02-12T13:00:00.000Z'
                approvals:
                - user_id: 6
                  approved: true
                  user_name: Awesome Princess 1st
                  created_at: '2021-03-31T13:00:00.000Z'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      id: 3
                      kind: csv
                      creator_id: 2
                      name: file
                      status: rejected
                      local_instrument: SEPA
                      total_payout_requests_count: 2
                      total_amount: 24.0
                      currency:
                        iso: EUR
                        name: Euro
                      country:
                        iso: BE
                        name: Belgium
                      approvers_count: 1
                      accepted_payout_requests_count: 0
                      rejections:
                      - user_id: 5
                        approved: false
                        user_name: Test user
                      approvals:
                      - user_id: 6
                        approved: true
                        user_name: Awesome Princess 1st
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title:
                  title: Unable to fetch batch details
                  details: Payment request batch not found
                details:
                -
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details: []
                      title:
                        details: Payment request batch not found
                        title: Unable to fetch batch details
                required:
                - errors
  "/api/v1/payouts/organisations/{organisation_id}/batches/{id}/approve":
    post:
      summary: Performs approve batch request
      tags:
      - BatchApproval
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        example: '8'
        required: true
        schema:
          type: string
      - name: id
        in: path
        example: '8'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                success: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    example:
                      success: true
                required:
                - data
        '422':
          description: Unprocessable Entity
          examples:
            When user already gave review:
              errors:
              - title:
                  code: 1002
                  title: Validation Error
                  details:
                    user_id:
                    - review already given
                details:
                -
            When batch has invalid state:
              errors:
              - title:
                  code: 1002
                  title: Validation Error
                  details:
                    batch_id:
                    - not under review
                details:
                -
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title:
                        code: 1002
                        title: Validation Error
                        details:
                          user_id:
                          - review already given
                          batch_id:
                          - not under review
                      details: []
                required:
                - errors
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
  "/api/v1/payouts/organisations/{organisation_id}/batches/{id}/reject":
    post:
      summary: Performs reject batch request
      tags:
      - BatchRejection
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        example: '8'
        required: true
        schema:
          type: string
      - name: id
        in: path
        example: '10'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                success: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example:
                      success: true
                required:
                - data
        '422':
          description: Unprocessable Entity
          examples:
            When user already gave review:
              errors:
              - title:
                  code: 1002
                  title: Validation Error
                  details:
                    user_id:
                    - review already given
                details:
                -
            When batch has invalid state:
              errors:
              - title:
                  code: 1002
                  title: Validation Error
                  details:
                    batch_id:
                    - not under review
                details:
                -
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title:
                        code: 1002
                        title: Validation Error
                        details:
                          user_id:
                          - review already given
                          batch_id:
                          - not under review
                      details: []
                required:
                - errors
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
  "/api/v1/payouts/local_instruments":
    get:
      summary: local_instruments
      tags:
      - BatchUploads
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Ok
          examples:
            When local instruments are found:
              data:
              - name: SEPA
                products:
                - id: 943
                  label: "(EUR) Euro & (AT) Austria"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - name: SEPA
                      products:
                      - id: 943
                        label: "(EUR) Euro & (AT) Austria"
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
  "/api/v1/payouts/organisation_product_currencies":
    get:
      summary: Performs organisation product currencies index
      tags:
      - Get organisation product currencies index page
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - iso: EUR
                name: Euro
              - iso: DKK
                name: Danish Krone
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - iso: EUR
                      name: Euro
                    - iso: DKK
                      name: Danish Krone
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
  "/api/v1/payouts/organisations/{organisation_id}/payout_drafts":
    get:
      summary: Performs payout drafts index request
      tags:
      - Get payout drafts index
      parameters:
      - name: Authorization
        in: header
        example: Bearer `JWT access token`
        required: true
        schema:
          type: string
      - name: organisation_id
        in: path
        example: 8
        required: true
        schema:
          type: integer
      - name: created_after
        in: query
        example: '2022-01-01'
        required: false
        schema:
          type: string
      - name: created_before
        in: query
        example: '2022-02-01'
        required: true
        schema:
          type: string
      - name: cursor_after
        in: query
        example: MzA3Mg==
        required: false
        schema:
          type: string
      - name: cursor_before
        in: query
        example: MzA4NA==
        required: false
        schema:
          type: string
      - name: include_cursor
        in: query
        example: false
        required: false
        schema:
          type: boolean
      - name: page_size
        in: query
        example: 5
        required: false
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: object
          properties:
            filter:
              type: hash
          required: true
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - id: 1
                created_at: '2023-08-31T11:16:42.089+01:00'
                amount: 410.0
                state: received
                end_to_end_id: Test1234661117
                currency: EUR
                debtor_account: '63262202402'
              meta:
                has_next_page: false
                has_prev_page: false
                cursor_next: 1
                cursor_prev: 1
                total: 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - id: 74093
                      created_at: '2023-01-03T07:26:14.000Z'
                      end_to_end_id: Xo5FMjbH9nHrF8V
                      amount: '99.0'
                      currency: GBP
                      state: completed
                      debtor_account: '49434828123'
                    - id: 74090
                      created_at: '2023-01-03T07:22:41.000Z'
                      end_to_end_id: oguJolmtsp_SPCP
                      amount: '47.0'
                      currency: GBP
                      state: completed
                      debtor_account: '49434828123'
                    - id: 73862
                      created_at: '2022-12-08T08:37:46.000Z'
                      end_to_end_id: d93e85e8-b2ee-4a68-8c30-8102cbceee1f
                      amount: '43783.0'
                      currency: JPY
                      state: processing
                      debtor_account: '93111710669'
                    - id: 73847
                      created_at: '2022-12-07T08:28:42.000Z'
                      end_to_end_id: da951bd8-179a-479d-bc0f-948c51b4e804
                      amount: '43783.0'
                      currency: JPY
                      state: processing
                      debtor_account: '93111710669'
                  meta:
                    type: hash
                    example:
                      cursor_next: 47RLMVT
                      cursor_prev: 4DZRF5B
                      has_previous_page: false
                      has_next_page: false
                      total: 4
                required:
                - data
                - meta
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
  "/api/v1/payouts/organisations/{organisation_id}/payout_drafts/{id}":
    get:
      summary: Performs get payout draft details request
      tags:
      - Get payout draft details
      parameters:
      - name: Authorization
        in: header
        example: Bearer `JWT access token`
        required: true
        schema:
          type: string
      - name: organisation_id
        in: path
        required: true
        example: '8'
        description: Organisation id
        schema:
          type: string
      - name: id
        in: path
        required: true
        example: '3'
        description: Payout draft id
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                amount: '410'
                currency_code: EUR
                local_instrument: SEPA
                end_to_end_id: Test1234661117
                creditor_account:
                  country_code: AT
                  iban: AT243745800005789839
                creditor:
                  name: Sasha
                  address_lines: Hristo-Botev
                  city: Chisinau
                  postcode: '1234'
                debtor:
                  name: Sasha
                ultimate_debtor:
                  name: Alexandru
                  country_code: DE
                  address_lines: Gradina Botanica
                  city: Copen
                  postcode: Test1234
                debtor_account:
                  id: '63262202402'
                  scheme_name: VirtualAccount
                batch_id: 3
                state: received
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      amount: '410'
                      currency_code: EUR
                      local_instrument: SEPA
                      end_to_end_id: Test1234661117
                      creditor_account:
                        country_code: AT
                        iban: AT243745800005789839
                      creditor:
                        name: Sasha
                        address_lines: Hristo-Botev
                        city: Chisinau
                        postcode: '1234'
                      debtor:
                        name: Sasha
                      ultimate_debtor:
                        name: Alexandru
                        country_code: DE
                        address_lines: Gradina Botanica
                        city: Copen
                        postcode: Test1234
                      debtor_account:
                        id: '63262202402'
                        scheme_name: VirtualAccount
                      batch_id: 3
                      state: received
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title:
                  code: 1001
                  title: Resource not found
                  details: Payment Request Draft not found
                details:
                -
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details: []
                      title:
                        code: 1001
                        details: Payment Request Draft not found
                        title: Resource not found
                required:
                - errors
  "/api/v1/payouts/payout_request_csv_batches":
    get:
      summary: Performs get csv batches request
      tags:
      - BatchUploads
      security:
      - bearer_auth: []
      parameters:
      - name: created_after
        in: query
        example: '2022-01-01'
        required: false
        schema:
          type: string
      - name: created_before
        in: query
        example: '2022-02-01'
        required: true
        schema:
          type: string
      - name: cursor_after
        in: query
        example: MzA3Mg==
        required: false
        schema:
          type: string
      - name: cursor_before
        in: query
        example: MzA4NA==
        required: false
        schema:
          type: string
      - name: include_cursor
        in: query
        example: false
        required: false
        schema:
          type: boolean
      - name: page_size
        in: query
        example: 5
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - id: 1234
                kind: csv
                accepted_payout_count: 1
                name: file.xml
                local_instrument_corridor: SEPA - EUR - DE
              - id: 2345
                kind: csv
                accepted_payout_count: 1
                name: file.xml
                local_instrument_corridor: SEPA - EUR - DE
              meta:
                cursor_next: MzA3Mg==
                cursor_prev: MzA4NA==
                has_previous_page: false
                has_next_page: true
                total: 2
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - id: 1234
                      kind: csv
                      accepted_payout_count: 1
                      name: file.xml
                      local_instrument_corridor: SEPA - EUR - DE
                    - id: 2345
                      kind: csv
                      accepted_payout_count: 1
                      name: file.xml
                      local_instrument_corridor: SEPA - EUR - DE
                  meta:
                    type: hash
                    example:
                      cursor_next: MzA3Mg==
                      cursor_prev: MzA4NA==
                      has_next_page: true
                      has_previous_page: false
                      total: 2
                required:
                - data
                - meta
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
    post:
      summary: Performs create payout request batch request
      tags:
      - BatchUploads
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '202':
          description: Accepted
          examples:
            Accepted:
              data:
                filename: customer file name
                format: CSV
                batch_id: 86
              meta:
                country:
                  iso: AT
                  name: Austria
                currency:
                  iso: EUR
                  name: Euro
                local_instrument: SEPA
                payout_requests: 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      batch_id: 85
                      filename: customer file name
                      format: CSV
                  meta:
                    type: hash
                    example:
                      country:
                        iso: AT
                        name: Austria
                      currency:
                        iso: EUR
                        name: Euro
                      local_instrument: SEPA
                      payout_requests: 1
                required:
                - data
                - meta
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '406':
          description: Missing user id
          examples:
            Not acceptable:
              errors:
              - title: Validation Error
                details:
                - There are not payment requests to process
                source:
                  pointer: csv_file
              data:
                filename: customer file name
                format: CSV
            Missing user:
              errors:
              - title: Validation Error
                details:
                - Batch cannot be created without user id
                source:
                  pointer: user_id
              data:
                filename: customer file name
                format: CSV
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      filename: customer file name
                      format: CSV
                  errors:
                    type: array
                    example:
                    - details:
                      - Batch cannot be created without user id
                      source:
                        pointer: user_id
                      title: Validation Error
                required:
                - data
                - errors
        '422':
          description: Unprocessable entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation Error
                details:
                - Some payment requests are not valid
                source:
                  pointer: csv_file
              data:
                filename: customer file name
                format: CSV
                content: |
                  amount (required),currency_code (required),local_instrument (required),end_to_end_id (required),creditor_account.country_code (required),creditor_account.account_number,creditor_account.bank_bic,creditor_account.bank_branch_id,creditor_account.bank_branch_name,creditor_account.bank_clearing_system_code,creditor_account.bank_clearing_system_id,creditor_account.bank_name,creditor_account.iban (required),creditor.name (required),creditor.type,creditor.country_code,creditor.country_of_birth_code,creditor.country_of_residence_code,creditor.address_lines (required),creditor.birthdate,creditor.city (required),creditor.email,creditor.id_number,creditor.id_type,creditor.mobile_number,creditor.postcode (required),creditor.state,creditor.street_name,debtor.name (required),debtor.type,debtor.country_code,debtor.country_of_birth_code,debtor.country_of_residence_code,debtor.address_lines,debtor.birthdate,debtor.city,debtor.email,debtor.id_number,debtor.id_type,debtor.mobile_number,debtor.postcode,debtor.state,debtor.street_name,ultimate_debtor.name (required),ultimate_debtor.type,ultimate_debtor.country_code (required),ultimate_debtor.country_of_birth_code,ultimate_debtor.country_of_residence_code,ultimate_debtor.address_lines (required),ultimate_debtor.birthdate,ultimate_debtor.city (required),ultimate_debtor.email,ultimate_debtor.id_number,ultimate_debtor.id_type,ultimate_debtor.mobile_number,ultimate_debtor.postcode (required),ultimate_debtor.state,ultimate_debtor.street_name,debtor_account.id (required),debtor_account.scheme_name (required),requested_execution_date,currency_of_transfer,uetr,charge_bearer,business_unit,payment_information_id,remittance_description,purpose_code,errors
                  410.00,EUR,INVALID,Test123,Invalid country code,,,,,,,,AT243745800005789839,Sasha,,,,,Hristo-Botev,,Chisinau,,,,,1234,,,Sasha,,,,,,,,,,,,,,,Alexandru,,DE,,,Gradina Botanica,,Copen,,,,,Test1234,,,70546384067,VirtualAccount,,,,,,,,,"{""local_instrument"":[""unsupported or invalid""],""creditor_account.country_code"":[""unsupported or invalid. It should be in two letters ISO 3166-1 format""],""creditor_account.iban"":[""creditor_account country_code must match IBAN""]}"
              meta:
                country:
                  iso:
                  name:
                currency:
                  iso: EUR
                  name: Euro
                local_instrument:
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      content: |
                        amount (required),currency_code (required),local_instrument (required),end_to_end_id (required),creditor_account.country_code (required),creditor_account.account_number,creditor_account.bank_bic,creditor_account.bank_branch_id,creditor_account.bank_branch_name,creditor_account.bank_clearing_system_code,creditor_account.bank_clearing_system_id,creditor_account.bank_name,creditor_account.iban (required),creditor.name (required),creditor.type,creditor.country_code,creditor.country_of_birth_code,creditor.country_of_residence_code,creditor.address_lines (required),creditor.birthdate,creditor.city (required),creditor.email,creditor.id_number,creditor.id_type,creditor.mobile_number,creditor.postcode (required),creditor.state,creditor.street_name,debtor.name (required),debtor.type,debtor.country_code,debtor.country_of_birth_code,debtor.country_of_residence_code,debtor.address_lines,debtor.birthdate,debtor.city,debtor.email,debtor.id_number,debtor.id_type,debtor.mobile_number,debtor.postcode,debtor.state,debtor.street_name,ultimate_debtor.name (required),ultimate_debtor.type,ultimate_debtor.country_code (required),ultimate_debtor.country_of_birth_code,ultimate_debtor.country_of_residence_code,ultimate_debtor.address_lines (required),ultimate_debtor.birthdate,ultimate_debtor.city (required),ultimate_debtor.email,ultimate_debtor.id_number,ultimate_debtor.id_type,ultimate_debtor.mobile_number,ultimate_debtor.postcode (required),ultimate_debtor.state,ultimate_debtor.street_name,debtor_account.id (required),debtor_account.scheme_name (required),requested_execution_date,currency_of_transfer,uetr,charge_bearer,business_unit,payment_information_id,remittance_description,purpose_code,errors
                        410.00,EUR,INVALID,Test123,Invalid country code,,,,,,,,AT243745800005789839,Sasha,,,,,Hristo-Botev,,Chisinau,,,,,1234,,,Sasha,,,,,,,,,,,,,,,Alexandru,,DE,,,Gradina Botanica,,Copen,,,,,Test1234,,,70546384067,VirtualAccount,,,,,,,,,"{""local_instrument"":[""unsupported or invalid""],""creditor_account.country_code"":[""unsupported or invalid. It should be in two letters ISO 3166-1 format""],""creditor_account.iban"":[""creditor_account country_code must match IBAN""]}"
                      filename: customer file name
                      format: CSV
                      user_id: '5'
                  errors:
                    type: array
                    example:
                    - details:
                      - Some payment requests are not valid
                      source:
                        pointer: csv_file
                      title: Validation Error
                  meta:
                    type: hash
                    example:
                      country:
                        iso:
                        name:
                      currency:
                        iso: EUR
                        name: Euro
                      local_instrument:
                required:
                - data
                - errors
                - meta
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
              required: true
              format: base64
  "/api/v1/payouts/payout_request_draft":
    post:
      summary: Performs payout request create
      tags:
      - Payout request draft
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            When the customer already has a draft:
              errors:
              - title: Validation error
                details:
                - the customer already has a draft
                source:
                  pointer: user_id
            When provided data is incorrect:
              errors:
              - title: Validation error
                details:
                - does not belong to the Organisation
                source:
                  pointer: product_id
              - title: Validation error
                details:
                - must exist
                source:
                  pointer: schema_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      - the customer already has a draft
                      source:
                        pointer: user_id
                      title: Validation error
                required:
                - errors
        '201':
          description: Created
          examples:
            Created:
              data:
                payout_request:
                  amount:
                    ui_field: text
                  end_to_end_id:
                    ui_field: text
                  virtual_account_number:
                    ui_field: text
                  business_unit:
                    ui_field: text
                ultimate_debtor:
                  name:
                    ui_field: text
                  country_code:
                    ui_field: text
                  address_lines:
                    ui_field: text
                  city:
                    ui_field: text
                  postcode:
                    ui_field: text
                creditor:
                  name:
                    ui_field: text
                  address_lines:
                    ui_field: text
                  city:
                    ui_field: text
                  type:
                    ui_field: text
                creditor_account:
                  country_code:
                    ui_field: text
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      creditor:
                        address_lines:
                          ui_field: text
                        city:
                          ui_field: text
                        name:
                          ui_field: text
                        type:
                          ui_field: text
                      creditor_account:
                        country_code:
                          ui_field: text
                      payout_request:
                        amount:
                          ui_field: text
                        business_unit:
                          ui_field: text
                        end_to_end_id:
                          ui_field: text
                        virtual_account_number:
                          ui_field: text
                      ultimate_debtor:
                        address_lines:
                          ui_field: text
                        city:
                          ui_field: text
                        country_code:
                          ui_field: text
                        name:
                          ui_field: text
                        postcode:
                          ui_field: text
                required:
                - data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  example: 943
                schema_id:
                  type: integer
                  example: 2
              required:
              - product_id
              - schema_id
    patch:
      summary: Performs payout request update
      tags:
      - Payout request draft
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Not Found
                details:
                - 'Can''t find draft with user_id: 1, organisation_id: 4'
                source:
                  pointer: user_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      - 'Can''t find draft with user_id: 1, organisation_id: 4'
                      source:
                        pointer: id
                      title: Not Found
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
                payout_request:
                  amount:
                  - must be greater than or equal to 30
                  end_to_end_id:
                  - is missing
                  virtual_account_number:
                  - is missing
                  business_unit:
                  - is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: hash
                    example:
                      payout_request:
                        amount:
                        - must be greater than or equal to 30
                        business_unit:
                        - is missing
                        end_to_end_id:
                        - is missing
                        virtual_account_number:
                        - is missing
                required:
                - errors
        '200':
          description: Ok
          examples:
            Ok:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payout_request:
                  type: hash
                  example:
                    amount: '12.40'
    get:
      summary: Performs payout request get
      tags:
      - Payout request draft
      security:
      - bearer_auth: []
      responses:
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Not Found
                details:
                - 'Can''t find draft with user_id: 1, organisation_id: 4'
                source:
                  pointer: user_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      - 'Can''t find draft with user_id: 1, organisation_id: 4'
                      source:
                        pointer: id
                      title: Not Found
                required:
                - errors
        '200':
          description: Ok
          examples:
            Ok:
              data:
                payout_request:
                  amount:
                    ui_field: text
                    errors:
                    - must be between 40, 50
                    value: '32.0'
                  end_to_end_id:
                    ui_field: text
                    value: dbc3a373
                  virtual_account_number:
                    ui_field: text
                    errors:
                    - is missing
                  business_unit:
                    ui_field: text
                    errors:
                    - must exist
                    value: dbc3a373-3761-420d
                ultimate_debtor:
                  name:
                    ui_field: text
                  country_code:
                    ui_field: text
                  address_lines:
                    ui_field: text
                  city:
                    ui_field: text
                  postcode:
                    ui_field: text
                creditor:
                  name:
                    ui_field: text
                  address_lines:
                    ui_field: text
                  city:
                    ui_field: text
                  type:
                    ui_field: text
                creditor_account:
                  country_code:
                    ui_field: text
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      creditor:
                        address_lines:
                          ui_field: text
                        city:
                          ui_field: text
                        name:
                          ui_field: text
                        type:
                          ui_field: text
                      creditor_account:
                        country_code:
                          ui_field: text
                      payout_request:
                        amount:
                          ui_field: text
                          value: '41.0'
                        business_unit:
                          ui_field: text
                          errors:
                          - must exist
                          value: dbc3a373-3761-420d
                        end_to_end_id:
                          ui_field: text
                          value: dbc3a373
                        virtual_account_number:
                          ui_field: text
                          errors:
                          - is missing
                      ultimate_debtor:
                        address_lines:
                          ui_field: text
                        city:
                          ui_field: text
                        country_code:
                          ui_field: text
                        name:
                          ui_field: text
                        postcode:
                          ui_field: text
                required:
                - data
    delete:
      summary: Performs payout request delete
      tags:
      - Payout request draft
      security:
      - bearer_auth: []
      responses:
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors: []
        '200':
          description: Ok
          examples:
            Ok:
  "/api/v1/payouts/payout_request_draft/publish":
    post:
      summary: Performs payout request publish
      tags:
      - Payout request draft
      security:
      - bearer_auth: []
      responses:
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Not Found
                details:
                - 'Can''t find draft with user_id: 1, organisation_id: 4'
                source:
                  pointer: user_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      - 'Can''t find draft with user_id: 1, organisation_id: 4'
                      source:
                        pointer: id
                      title: Not Found
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Precondition Failure
                details:
                - are present
                source:
                  pointer: validation_errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - details:
                      - are present
                      source:
                        pointer: validation_errors
                      title: Precondition Failure
                required:
                - errors
        '201':
          description: Created
          examples:
            Created:
              data:
                debtor_account:
                  id: '70546384067'
                  scheme_name: VirtualAccount
                end_to_end_id: aloedbc3a374
                inpay_unique_reference: 454FA4A
                amount: '41.0'
                currency: EUR
                timestamp: '2023-02-27T09:26:35.000Z'
                state: received
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      debtor_account:
                        id: '70546384067'
                        scheme_name: VirtualAccount
                      end_to_end_id: aloedbc3a374
                      inpay_unique_reference: 454FA4A
                      amount: '41.0'
                      currency: EUR
                      timestamp: '2023-02-27T09:26:35.000Z'
                      state: received
                required:
                - data
  "/api/v1/payouts/payout_request_reason_codes":
    get:
      summary: Performs payout request index
      tags:
      - Get payout request index page
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - id: 1
                kind: refund_cancelled
                group: contract_issue
                reason: Not supported by your contract
                external_message: Cancelled - Not supported by your contract
                symbol: not_supported_by_your_contract
                protected: false
              - id: 2
                kind: refund_cancelled
                group: contract_issue
                reason: Service unavailable
                external_message: Cancelled - Service unavailable
                symbol: service_unavailable
                protected: false
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - id: 1
                      kind: refund_cancelled
                      group: contract_issue
                      reason: Not supported by your contract
                      external_message: Cancelled - Not supported by your contract
                      symbol: not_supported_by_your_contract
                      protected: false
                    - id: 2
                      kind: refund_cancelled
                      group: contract_issue
                      reason: Service unavailable
                      external_message: Cancelled - Service unavailable
                      symbol: service_unavailable
                      protected: false
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
  "/api/v1/payouts/payout_requests/{reference}":
    get:
      summary: Performs get payout request details request
      tags:
      - Get payout request details
      security:
      - bearer_auth: []
      parameters:
      - name: reference
        in: path
        required: true
        example: 4ES475Q
        description: Payout request reference
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                id: 185
                inpay_unique_reference: 4ES475Q
                end_to_end_id: iW48HU8G7A4B20q
                local_instrument: SEPA
                amount: '100.0'
                currency: EUR
                status: received
                timestamp: 2022-06-13 12:57:29 UTC
                debtor_account:
                  number: '70546384067'
                  currency: EUR
                ultimate_debtor:
                  full_name: Marina Teresa
                  birthdate: '1988-09-05'
                  address: StreetName, Schwedenstrasse 22, New Birdiefurt, USA
                  city: New Birdiefurt
                  country_code: AT
                  postal_code: '6710'
                  email: test@gmail.com
                  mobile_number: 322-234-455
                creditor:
                  full_name: John Doe
                  birthdate: '2010-08-09'
                  address: 'street Name, 4916 Emmanuelle Mountain, San Bernardino, '
                  city: San Bernardino
                  country_code: BE
                  postal_code: '123'
                  email: natalia@gmail.com
                  mobile_number: 830-431-6587
                creditor_account:
                  iban: DE29520503531003232395
                  account_number:
                  account_number_type:
                  bank_bic: test
                  bank_name: Bank of montreal
                  bank_clearing_system_code:
                  bank_clearing_system_id:
                  bank_branch_id:
                  bank_branch_name:
                  country_code: BE
                status_transitions:
                - name: received
                  timestamp: 2022-06-13 12:57:29 UTC
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      amount: '100.0'
                      currency: EUR
                      end_to_end_id: iW48HU8G7A4B20q
                      id: 185
                      inpay_unique_reference: 4ES475Q
                      local_instrument: SEPA
                      status: received
                      timestamp: 2022-06-13 12:57:29 UTC
                      creditor:
                        address: 'street Name, 4916 Emmanuelle Mountain, San Bernardino, '
                        birthdate: '2010-08-09'
                        city: San Bernardino
                        country_code: BE
                        email: natalia@gmail.com
                        full_name: John Doe
                        mobile_number: 830-431-6587
                        postal_code: '123'
                      creditor_account:
                        account_number:
                        account_number_type:
                        bank_bic: test
                        bank_branch_id:
                        bank_branch_name:
                        bank_clearing_system_code:
                        bank_clearing_system_id:
                        bank_name: Bank of montreal
                        country_code: BE
                        iban: DE29520503531003232395
                      debtor_account:
                        currency: EUR
                        number: '70546384067'
                      status_transitions:
                      - name: received
                        timestamp: 2022-06-13 12:57:29 UTC
                      ultimate_debtor:
                        address: StreetName, Schwedenstrasse 22, New Birdiefurt, USA
                        birthdate: '1988-09-05'
                        city: New Birdiefurt
                        country_code: AT
                        email: test@gmail.com
                        full_name: Marina Teresa
                        mobile_number: 322-234-455
                        postal_code: '6710'
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Not found
                source:
                  pointer: inpay_unique_reference
                details:
                - Payment request not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not found
                      details:
                      - Payment request not found
                      source:
                        pointer: inpay_unique_reference
                required:
                - errors
  "/api/v1/payouts/payout_requests":
    get:
      summary: Performs payout request index
      tags:
      - Get payout request index page
      security:
      - bearer_auth: []
      parameters:
      - name: created_after
        in: query
        example: '2022-01-01'
        required: false
        schema:
          type: string
      - name: created_before
        in: query
        example: '2022-02-01'
        required: true
        schema:
          type: string
      - name: cursor_after
        in: query
        example: MzA3Mg==
        required: false
        schema:
          type: string
      - name: cursor_before
        in: query
        example: MzA4NA==
        required: false
        schema:
          type: string
      - name: include_cursor
        in: query
        example: false
        required: false
        schema:
          type: boolean
      - name: page_size
        in: query
        example: 5
        required: false
        schema:
          type: integer
      - name: state_category
        in: query
        example: processing
        required: false
        schema:
          type: string
      - name: batch_id
        in: query
        example: 5
        required: false
        schema:
          type: integer
      - name: currency_code
        in: query
        example: EUR
        required: false
        schema:
          type: string
      - name: amount_from
        in: query
        example: 100
        required: false
        schema:
          type: integer
      - name: amount_to
        in: query
        example: 200
        required: false
        schema:
          type: integer
      - name: reason_code_id
        in: query
        example: 1
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - id: 74093
                created_at: '2023-01-03T07:26:14.000Z'
                execution_date:
                inpay_unique_reference: 4DZRF5B
                end_to_end_id: Xo5FMjbH9nHrF8V
                amount: '99.0'
                currency: GBP
                state: completed
                debtor_account: '49434828123'
              - id: 74090
                created_at: '2023-01-03T07:22:41.000Z'
                execution_date:
                inpay_unique_reference: 4MM52K5
                end_to_end_id: oguJolmtsp_SPCP
                amount: '47.0'
                currency: GBP
                state: completed
                debtor_account: '49434828123'
              - id: 73862
                created_at: '2022-12-08T08:37:46.000Z'
                execution_date:
                inpay_unique_reference: 44FDU6W
                end_to_end_id: d93e85e8-b2ee-4a68-8c30-8102cbceee1f
                amount: '43783.0'
                currency: JPY
                state: processing
                debtor_account: '93111710669'
              - id: 73847
                created_at: '2022-12-07T08:28:42.000Z'
                execution_date:
                inpay_unique_reference: 47RLMVT
                end_to_end_id: da951bd8-179a-479d-bc0f-948c51b4e804
                amount: '43783.0'
                currency: JPY
                state: processing
                debtor_account: '93111710669'
              meta:
                cursor_next: 47RLMVT
                cursor_prev: 4DZRF5B
                has_previous_page: false
                has_next_page: false
                total: 4
                has_payouts: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - id: 74093
                      created_at: '2023-01-03T07:26:14.000Z'
                      execution_date:
                      inpay_unique_reference: 4DZRF5B
                      end_to_end_id: Xo5FMjbH9nHrF8V
                      amount: '99.0'
                      currency: GBP
                      state: completed
                      debtor_account: '49434828123'
                    - id: 74090
                      created_at: '2023-01-03T07:22:41.000Z'
                      execution_date:
                      inpay_unique_reference: 4MM52K5
                      end_to_end_id: oguJolmtsp_SPCP
                      amount: '47.0'
                      currency: GBP
                      state: completed
                      debtor_account: '49434828123'
                    - id: 73862
                      created_at: '2022-12-08T08:37:46.000Z'
                      execution_date:
                      inpay_unique_reference: 44FDU6W
                      end_to_end_id: d93e85e8-b2ee-4a68-8c30-8102cbceee1f
                      amount: '43783.0'
                      currency: JPY
                      state: processing
                      debtor_account: '93111710669'
                    - id: 73847
                      created_at: '2022-12-07T08:28:42.000Z'
                      execution_date:
                      inpay_unique_reference: 47RLMVT
                      end_to_end_id: da951bd8-179a-479d-bc0f-948c51b4e804
                      amount: '43783.0'
                      currency: JPY
                      state: processing
                      debtor_account: '93111710669'
                  meta:
                    type: hash
                    example:
                      cursor_next: 47RLMVT
                      cursor_prev: 4DZRF5B
                      has_previous_page: false
                      has_next_page: false
                      total: 4
                      has_payouts: true
                required:
                - data
                - meta
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
  "/api/v1/payouts/product_schemas":
    parameters:
    - name: product_id
      in: query
      description: Product id
      schema:
        type: string
    get:
      summary: product_schemas
      tags:
      - BatchUploads
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Ok
          examples:
            When available product schemas:
              data:
              - id: 5
                label: LOCAL AU
              - id: 9
                label: LOCAL GBP WITH IBAN
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - id: 5
                      label: LOCAL AU
                    - id: 9
                      label: LOCAL GBP WITH IBAN
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Not found
                source:
                  pointer: id
                details:
                - Disbursement Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not found
                      details:
                      - Disbursement Product not found
                      source:
                        pointer: id
                required:
                - errors
  "/api/v1/payouts/schemas/{id}/csv_template":
    parameters:
    - name: id
      in: path
      required: true
      example: 1
      description: Schema ID
      schema:
        type: number
    get:
      summary: schema csv template
      tags:
      - BatchUploads
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Ok
          examples:
            When available product schemas:
              csv_template.csv: 'amount (required),currency_code (required),local_instrument
                (required),end_to_end_id (required),creditor_account.country_code
                (required),creditor_account.account_number,creditor_account.bank_bic,creditor_account.bank_branch_id,creditor_account.bank_branch_name,creditor_account.bank_clearing_system_code,creditor_account.bank_clearing_system_id,creditor_account.bank_name,creditor_account.iban,creditor.name
                (required),creditor.type,creditor.country_code,creditor.country_of_birth_code,creditor.country_of_residence_code,creditor.address_lines
                (required),creditor.birthdate,creditor.city (required),creditor.email,creditor.id_number,creditor.id_type,creditor.mobile_number,creditor.postcode
                (required),creditor.state,creditor.street_name,debtor.name (required),debtor.type,debtor.country_code,debtor.country_of_birth_code,debtor.country_of_residence_code,debtor.address_lines,debtor.birthdate,debtor.city,debtor.email,debtor.id_number,debtor.id_type,debtor.mobile_number,debtor.postcode,debtor.state,debtor.street_name,ultimate_debtor.name
                (required),ultimate_debtor.type,ultimate_debtor.country_code (required),ultimate_debtor.country_of_birth_code,ultimate_debtor.country_of_residence_code,ultimate_debtor.address_lines
                (required),ultimate_debtor.birthdate,ultimate_debtor.city (required),ultimate_debtor.email,ultimate_debtor.id_number,ultimate_debtor.id_type,ultimate_debtor.mobile_number,ultimate_debtor.postcode
                (required),ultimate_debtor.state,ultimate_debtor.street_name,debtor_account.id
                (required),debtor_account.scheme_name (required),requested_execution_date,currency_of_transfer,uetr,charge_bearer,business_unit,payment_information_id,remittance_description,purpose_code

                '
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '404':
          description: Not Found
          examples:
            Not found:
              errors:
              - title: Not found
                source:
                  pointer: id
                details:
                - Disbursement Schema not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not found
                      details:
                      - Disbursement Schema not found
                      source:
                        pointer: id
                required:
                - errors
  "/api/v1/payouts/payout_requests/stats/reason_codes_reports":
    get:
      summary: Performs get reason_codes_statistic request
      tags:
      - Payouts stats
      security:
      - bearer_auth: []
      parameters:
      - name: categories[]
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - returned
            - rejected
            - received
            description: State Categories to filter payments reuqest statistics
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                returned:
                  items:
                    invalid_data_country_mismatch:
                      count: 1
                      percentage: 50.0
                    service_unavailable:
                      count: 1
                      percentage: 50.0
                  meta:
                    count: 2
                    percentage: 0.67
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      returned:
                        meta:
                          total_count: 10
                          percentage: 100%
                        rows: {}
                required:
                - data
  "/api/v1/payouts/payout_requests/stats/state_category_counts_reports":
    get:
      summary: Performs get state category counts stats request
      tags:
      - Payouts stats
      security:
      - bearer_auth: []
      parameters:
      - name: categories[]
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - rejected
            description: State Categories to filter payments request stats
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - code: returned
                name: Returned
                count: 10
              meta:
                count: 10
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - code: rejected
                      name: Rejected
                      count: 10
                  meta:
                    type: hash
                    example:
                      count: 10
                required:
                - data
  "/api/v1/payouts/payout_requests/stats/state_category_reason_code_counters":
    get:
      summary: Performs get state category reason code counts request
      tags:
      - Payouts stats
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                rejected:
                  payout_count: 10
                  reason_codes:
                  - reason_code_id: 4
                    category: rejected
                    kind: payment_request_rejected
                    external_message: Rejected - Invalid creditor account
                    symbol: invalid_creditor_account
                    payout_count: 5
                  - reason_code_id: 5
                    category: rejected
                    kind: payment_request_rejected
                    external_message: Rejected - Invalid creditor
                    symbol: invalid_creditor
                    payout_count: 5
                returned:
                  payout_count: 5
                  reason_codes:
                  - reason_code_id: 6
                    category: returned
                    kind: refund_returned
                    external_message: Returned - Incorrect beneficiary bank details
                    symbol: invalid_data_incorrect_beneficiary_bank_details
                    payout_count: 5
  "/api/v1/payouts/payout_requests/stats/states_reports":
    get:
      summary: Performs get states_statistic request
      tags:
      - Payouts stats
      security:
      - bearer_auth: []
      parameters:
      - name: categories[]
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - rejected
            description: State Categories to filter payments reuqest statistics
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                rejected:
                  items:
                    missing_capability:
                      count: 61
                      percentage: 70.93
                    validation_schema_failed:
                      count: 11
                      percentage: 12.79
                    payment_request_cancelled:
                      count: 14
                      percentage: 16.28
                  meta:
                    count: 86
                    percentage: 28.76
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      returned:
                        meta:
                          total_count: 10
                          percentage: 100%
                        rows: {}
                required:
                - data
  "/api/v1/reconciliation/account_statement_reports":
    get:
      summary: Performs get account statement reports request
      tags:
      - Accounts
      security:
      - bearer_auth: []
      parameters:
      - name: virtual_account_number
        in: query
        required: false
        example: '70546384067'
        description: Virtual Account number
        schema:
          type: string
      - name: created_after
        in: query
        example: '2022-01-01'
        required: true
        schema:
          type: string
      - name: created_before
        in: query
        example: '2022-01-31'
        required: false
        schema:
          type: string
      - name: cursor_after
        in: query
        example: d71e2252-7043-43c8-bdba-3a6f9e07f9f7
        required: false
        schema:
          type: string
      - name: cursor_before
        in: query
        example: b24096a-2114-428b-9f70-37d8368359ef
        required: false
        schema:
          type: string
      - name: include_cursor
        in: query
        example: false
        required: false
        schema:
          type: boolean
      - name: page_size
        in: query
        example: 50
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - uuid: 0b24096a-2114-428b-9f70-37d8368359ef
                date_from: '2022-07-01'
                date_to: '2022-08-31'
                virtual_account_number: '70546384067'
                number_of_transactions: '321'
                currency: EUR
              - uuid: d71e2252-7043-43c8-bdba-3a6f9e07f9f7
                date_from: '2022-07-01'
                date_to: '2022-12-15'
                virtual_account_number: '70546384067'
                number_of_transactions: '120'
                currency: EUR
              meta:
                cursor_next: d71e2252-7043-43c8-bdba-3a6f9e07f9f7
                cursor_prev: 0b24096a-2114-428b-9f70-37d8368359ef
                has_previous_page: false
                has_next_page: false
                total: 2
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - uuid: 0b24096a-2114-428b-9f70-37d8368359ef
                      date_from: '2022-07-01'
                      date_to: '2022-08-31'
                      virtual_account_number: '70546384067'
                      currency: EUR
                      number_of_transactions: '321'
                    - uuid: d71e2252-7043-43c8-bdba-3a6f9e07f9f7
                      date_from: '2022-07-01'
                      date_to: '2022-12-15'
                      virtual_account_number: '70546384067'
                      currency: EUR
                      number_of_transactions: '120'
                  meta:
                    type: hash
                    example:
                      cursor_next: d71e2252-7043-43c8-bdba-3a6f9e07f9f7
                      cursor_prev: 0b24096a-2114-428b-9f70-37d8368359ef
                      has_previous_page: false
                      has_next_page: false
                      total: 2
                required:
                - data
                - meta
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            When created after is invalid:
              errors:
              - title: Validation error
                details:
                - format is invalid, should be ISO 8601
                source:
                  pointer: created_after
            When virtual account number does not exist:
              errors:
              - title: Validation error
                details:
                - must exists
                source:
                  pointer: virtual_account_number
            When virtual account number is empty:
              errors:
              - title: Validation error
                details:
                - must be filled
                source:
                  pointer: virtual_account_number
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - must exists
                      source:
                        pointer: virtual_account_number
                required:
                - errors
  "/api/v1/reconciliation/organisations/{organisation_id}/accounts":
    get:
      summary: Performs get accounts request
      tags:
      - Accounts
      security:
      - bearer_auth: []
      parameters:
      - name: organisation_id
        in: path
        example: '1'
        required: true
        description: Organisation ID
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - account_number: '45701229351'
                currency_code: EUR
                currency_name: Euro
                balance: '9997849.0'
              - account_number: '28723609565'
                currency_code: GBP
                currency_name: Pound Sterling
                balance: '0.0'
              - account_number: '29224097574'
                currency_code: DKK
                currency_name: Danish Krone
                balance: '0.0'
              - account_number: '06632990033'
                currency_code: CAD
                currency_name: Canadian Dollar
                balance: '0.0'
              - account_number: '60494674498'
                currency_code: CAD
                currency_name: Canadian Dollar
                balance: '0.0'
              - account_number: '43887893609'
                currency_code: EUR
                currency_name: Euro
                balance: '0.0'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - account_number: '45701229351'
                      currency_code: EUR
                      currency_name: Euro
                      balance: '9997849.0'
                    - account_number: '28723609565'
                      currency_code: GBP
                      currency_name: Pound Sterling
                      balance: '0.0'
                    - account_number: '29224097574'
                      currency_code: DKK
                      currency_name: Danish Krone
                      balance: '0.0'
                    - account_number: '06632990033'
                      currency_code: CAD
                      currency_name: Canadian Dollar
                      balance: '0.0'
                    - account_number: '60494674498'
                      currency_code: CAD
                      currency_name: Canadian Dollar
                      balance: '0.0'
                    - account_number: '43887893609'
                      currency_code: EUR
                      currency_name: Euro
                      balance: '0.0'
                required:
                - data
  "/api/v1/reconciliation/accounts/{virtual_account_number}/funding":
    post:
      summary: Performs create account funding request
      tags:
      - Fundings
      security:
      - bearer_auth: []
      parameters:
      - name: virtual_account_number
        in: path
        required: true
        example: '19500234939'
        description: Virtual Account number
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            When account funding successfully created:
              amount: '1234567.89'
              order_reference: xxDDmmGG100
              order_text: Good payment!
              reference: 33V49Q9
              status: created
              created_at: '2022-10-03T18:56:18.000+01:00'
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            When virtual account number is invalid:
              errors:
              - title: Validation error
                details:
                - must exists
                source:
                  pointer: virtual_account_number
            When parameter currency is missing:
              errors:
              - title: Validation error
                details:
                - is missing
                source:
                  pointer: currency
            When parameter order reference is missing:
              errors:
              - title: Validation error
                details:
                - is missing
                source:
                  pointer: end_to_end_id
            When parameter amount is missing:
              errors:
              - title: Validation error
                details:
                - is missing
                source:
                  pointer: amount
            When all parameters are missing:
              errors:
              - title: Validation error
                details:
                - is missing
                source:
                  pointer: end_to_end_id
              - title: Validation error
                details:
                - is missing
                source:
                  pointer: amount
              - title: Validation error
                details:
                - is missing
                source:
                  pointer: currency
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - is missing
                      source:
                        pointer: end_to_end_id
                    - title: Validation error
                      details:
                      - is missing
                      source:
                        pointer: amount
                    - title: Validation error
                      details:
                      - is missing
                      source:
                        pointer: currency
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                end_to_end_id:
                  type: string
                remittance_description:
                  type: string
                amount:
                  type: number
              required:
              - currency
              - end_to_end_id
              - amount
  "/api/v1/reconciliation/accounts/{virtual_account_number}/reports":
    post:
      summary: Performs create account statement report request
      tags:
      - Accounts
      security:
      - bearer_auth: []
      parameters:
      - name: virtual_account_number
        in: path
        required: true
        example: '70546384067'
        description: Virtual Account number
        schema:
          type: string
      - name: created_after
        in: query
        example: '2022-01-01'
        required: true
        schema:
          type: string
      - name: created_before
        in: query
        example: '2022-01-31'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            When report already exists:
        '202':
          description: Accepted
          examples:
            When report does not exist:
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation error
                details:
                - must exists
                source:
                  pointer: virtual_account_number
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - must exists
                      source:
                        pointer: virtual_account_number
                required:
                - errors
  "/api/v1/reconciliation/accounts/{virtual_account_number}/reports/{uuid}":
    get:
      summary: Performs get account statement report request
      tags:
      - Accounts
      security:
      - bearer_auth: []
      parameters:
      - name: virtual_account_number
        in: path
        required: true
        example: '70546384067'
        description: Virtual Account number
        schema:
          type: string
      - name: uuid
        in: path
        example: b8fde781-ddd2-4092-97b5-db3722eb0c27
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              uuid: b8fde781-ddd2-4092-97b5-db3722eb0c27
              virtual_account_number: '70546384067'
              report_name: 70546384067 2022-01-01-2022-01-31
              currency: EUR
              date_from: '2022-01-01'
              date_to: '2022-01-31'
              number_of_transactions: 0
          content:
            application/json:
              schema:
                type: object
                example:
                  uuid: b8fde781-ddd2-4092-97b5-db3722eb0c27
                  virtual_account_number: '70546384067'
                  report_name: 70546384067 2022-01-01-2022-01-31
                  currency: EUR
                  date_from: '2022-01-01'
                  date_to: '2022-01-31'
                  number_of_transactions: 0
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation error
                details:
                - must exists
                source:
                  pointer: virtual_account_number
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - must exists
                      source:
                        pointer: virtual_account_number
                required:
                - errors
  "/api/v1/reconciliation/accounts/{virtual_account_number}/reports/{uuid}/download":
    get:
      summary: Performs download account statement report request
      tags:
      - Accounts
      security:
      - bearer_auth: []
      parameters:
      - name: virtual_account_number
        in: path
        required: true
        example: '70546384067'
        description: Virtual Account number
        schema:
          type: string
      - name: uuid
        in: path
        example: b8fde781-ddd2-4092-97b5-db3722eb0c27
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              70546384067 2022-09-04-2022-09-05.csv: |
                opening balance,closing balance
                999947857.0,999947857.0
                order_id,reference,amount,entry_type,date,currency,running_balance
                iv5UhuNbRu6Biai,4H5DNL7,-100.0,withdrawal,2022-09-05 07:58:29,EUR,999947557.0
                HEjz0Lp6QQObKlm,433DQMT,-100.0,withdrawal,2022-09-05 07:58:29,EUR,999947657.0
                NdR6YXxeQHexcwe,4FCW6BN,-100.0,withdrawal,2022-09-05 07:58:24,EUR,999947757.0
          content:
            application/json:
              schema:
                type: string
                example: |
                  opening balance,closing balance
                  999947857.0,999947857.0
                  order_id,reference,amount,entry_type,date,currency,running_balance
                  iv5UhuNbRu6Biai,4H5DNL7,-100.0,withdrawal,2022-09-05 07:58:29,EUR,999947557.0
                  HEjz0Lp6QQObKlm,433DQMT,-100.0,withdrawal,2022-09-05 07:58:29,EUR,999947657.0
                  NdR6YXxeQHexcwe,4FCW6BN,-100.0,withdrawal,2022-09-05 07:58:24,EUR,999947757.0
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation error
                details:
                - must exists
                source:
                  pointer: virtual_account_number
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - must exists
                      source:
                        pointer: virtual_account_number
                required:
                - errors
  "/api/v1/reconciliation/accounts/{virtual_account_number}/statement":
    get:
      summary: Performs get account statement request
      tags:
      - Accounts
      security:
      - bearer_auth: []
      parameters:
      - name: virtual_account_number
        in: path
        required: true
        example: '70546384067'
        description: Virtual Account number
        schema:
          type: string
      - name: created_after
        in: query
        example: '2022-01-01'
        required: true
        schema:
          type: string
      - name: created_before
        in: query
        example: '2022-01-31'
        required: true
        schema:
          type: string
      - name: cursor_after
        in: query
        example: 42B2XWR
        required: false
        schema:
          type: string
      - name: cursor_before
        in: query
        example: 43GDA3S
        required: false
        schema:
          type: string
      - name: include_cursor
        in: query
        example: false
        required: false
        schema:
          type: boolean
      - name: page_size
        in: query
        example: 50
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
              - id: 18
                order_id: 4DxB7kUwxfQRPJD
                reference: 43GDA3S
                amount: "-410.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:19:17'
                running_balance: "-2956.0"
              - id: 17
                order_id: Iu9pTD6SxQHBPWs
                reference: 4KQQK77
                amount: "-200.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:19:11'
                running_balance: "-2546.0"
              - id: 15
                order_id: L7QJ4KE4zSDFTfE
                reference: 4E2D8K3
                amount: "-99.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:19:06'
                running_balance: "-2346.0"
              - id: 15
                order_id: L7QJ4KE4zSDFTfE
                reference: 4E2D8K3
                amount: '2.0'
                entry_type: withdrawal_fee
                currency: EUR
                date: '2022-07-18 15:19:06'
                running_balance: "-2247.0"
              - id: 16
                order_id: UdO5ssuB0OR7qGG
                reference: 49C2WVX
                amount: "-173.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:19:06'
                running_balance: "-2249.0"
              - id: 14
                order_id: I70FLa4pVaGiuN0
                reference: 44NQM8T
                amount: "-540.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:19:00'
                running_balance: "-2076.0"
              - id: 13
                order_id: is1EiABUJmbiLJv
                reference: 4GD2VV5
                amount: "-540.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:02:02'
                running_balance: "-1536.0"
              - id: 12
                order_id: jq5yn3RdQA3B17H
                reference: 46ZD9KV
                amount: "-765.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:01:52'
                running_balance: "-996.0"
              - id: 11
                order_id: gp8GwMIWAn0iqBJ
                reference: 4BPQL7Z
                amount: "-132.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:01:46'
                running_balance: "-231.0"
              - id: 10
                order_id: ANHhZXvK6FG2cGK
                reference: 42B2XWR
                amount: "-89.0"
                entry_type: withdrawal
                currency: EUR
                date: '2022-07-18 15:00:30'
                running_balance: "-99.0"
              meta:
                cursor_next: 42B2XWR
                cursor_prev: 43GDA3S
                has_previous_page: false
                has_next_page: false
                total: 9
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - amount: "-132.0"
                      currency: EUR
                      date: '2022-07-18 15:01:46'
                      entry_type: withdrawal
                      id: 11
                      order_id: gp8GwMIWAn0iqBJ
                      reference: 4BPQL7Z
                      running_balance: "-231.0"
                    - amount: "-89.0"
                      currency: EUR
                      date: '2022-07-18 15:00:30'
                      entry_type: withdrawal
                      id: 10
                      order_id: ANHhZXvK6FG2cGK
                      reference: 42B2XWR
                      running_balance: "-99.0"
                  meta:
                    type: hash
                    example:
                      cursor_next: 42B2XWR
                      cursor_prev: 4BPQL7Z
                      has_next_page: false
                      has_previous_page: false
                      total: 2
                required:
                - data
                - meta
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation error
                details:
                - must exists
                source:
                  pointer: virtual_account_number
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - must exists
                      source:
                        pointer: virtual_account_number
                required:
                - errors
  "/api/v1/reconciliation/accounts/{virtual_account_number}/summary":
    get:
      summary: Performs get account summary request
      tags:
      - Accounts
      security:
      - bearer_auth: []
      parameters:
      - name: virtual_account_number
        in: path
        required: true
        example: '55582514175'
        description: Virtual Account number
        schema:
          type: string
      - name: created_after
        in: query
        example: '2022-01-01'
        required: true
        schema:
          type: string
      - name: created_before
        in: query
        example: '2022-01-31'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          examples:
            Ok:
              data:
                opening_balance: '999902512.0'
                closing_balance: '999899927.0'
                current_balance: '999947057.0'
                currency_code: EUR
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      currency_code: EUR
                      opening_balance: '999902512.0'
                      closing_balance: '999899927.0'
                      current_balance: '999947057.0'
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation error
                details:
                - must exists
                source:
                  pointer: virtual_account_number
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - must exists
                      source:
                        pointer: virtual_account_number
                required:
                - errors
  "/api/v1/reconciliation/transactions":
    parameters:
    - name: unique_identifier
      in: query
      description: Invoice reference or order_id
      schema:
        type: string
    get:
      summary: transactions
      tags:
      - Accounts
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Ok
          examples:
            When transaction is found:
              data:
              - order_id: 5vu366B9Tw33JQv
                reference: 45DQX23
                amount: "-100.0"
                entry_type: withdrawal
                date: '2022-06-15 08:43:52'
                currency: EUR
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    example:
                    - order_id: 5vu366B9Tw33JQv
                      reference: 45DQX23
                      amount: "-100.0"
                      entry_type: withdrawal
                      date: '2022-06-15 08:43:52'
                      currency: EUR
                    - order_id: 5vu366B9Tw33JQv
                      reference: 45DQX23
                      amount: '100.0'
                      entry_type: refund_cancelled
                      date: '2022-06-30 00:00:59'
                      currency: EUR
                    - order_id: 5vu366B9Tw33JQv
                      reference: 45DQX23
                      amount: "-25.0"
                      entry_type: refund_cancelled_fee
                      date: '2022-06-30 00:00:59'
                      currency: EUR
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            When invalid jwt token:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
            When auth scheme is missing:
              errors:
              - title: Not authorized
                details:
                - Auth Scheme is missing
            When auth scheme is invalid:
              errors:
              - title: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                      details:
                      - Invalid JWT token
                required:
                - errors
        '422':
          description: Unprocessable Entity
          examples:
            Unprocessable entity:
              errors:
              - title: Validation error
                details:
                - must be filled
                source:
                  pointer: unique_identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Validation error
                      details:
                      - must be filled
                      source:
                        pointer: unique_identifier
                required:
                - errors
  "/api/v1/system/feature_flags":
    get:
      summary: Performs get feature flags
      tags:
      - Get feature flags
      security:
      - bearer_auth: []
      responses:
        '200':
          description: success
          examples:
            Success:
              data:
                feature1: 'true'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: hash
                    example:
                      feature1: true
                required:
                - data
        '401':
          description: Unauthorized
          examples:
            Unauthorized:
              errors:
              - title: Not authorized
                details:
                - Invalid JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example:
                    - title: Not authorized
                required:
                - errors
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT